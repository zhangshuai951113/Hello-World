<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mongo="http://www.springframework.org/schema/data/mongo"  
    xmlns:util="http://www.springframework.org/schema/util"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd   
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd   
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd   
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd   
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd   
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd   
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd   
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd   
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd   
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd"  >  
    
    <!-- ###############################################################数据库连接配置start############################################################### -->
    <!-- comdb库 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <!-- 基本属性 url、user、password -->  
        <property name="url" value="${dataSource.url}" />  
        <property name="username" value="${dataSource.username}" />  
        <property name="password" value="${dataSource.password}" />  
        <property name="connectionProperties" value="${dataSource.driver}"></property>  
  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="10" />  
        <property name="minIdle" value="10" />  
        <property name="maxActive" value="30" />  
  
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait" value="6000" />  
  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="600" />  
  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="150000" />  

        <!-- 配置自动回收 -->  
        <property name="removeAbandoned" value="true" />  
        <property name="removeAbandonedTimeoutMillis" value="300000" />  
  
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
        <!-- 配置监控统计拦截的filters -->  
        <property name="filters" value="stat" />
    </bean>
    
    <!-- pridb库 -->
    <!-- <bean id="pridbDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        基本属性 url、user、password  
        <property name="url" value="${pridb.dataSource.url}" />  
        <property name="username" value="${pridb.dataSource.username}" />  
        <property name="password" value="${pridb.dataSource.password}" />  
        <property name="connectionProperties" value="${pridb.dataSource.driver}"></property>  
  
        配置初始化大小、最小、最大  
        <property name="initialSize" value="10" />  
        <property name="minIdle" value="10" />  
        <property name="maxActive" value="30" />  
  
        配置获取连接等待超时的时间  
        <property name="maxWait" value="6000" />  
  
        配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
        <property name="timeBetweenEvictionRunsMillis" value="600" />  
  
        配置一个连接在池中最小生存的时间，单位是毫秒  
        <property name="minEvictableIdleTimeMillis" value="150000" />  

        配置自动回收  
        <property name="removeAbandoned" value="true" />  
        <property name="removeAbandonedTimeoutMillis" value="120000" />  
  
        打开PSCache，并且指定每个连接上PSCache的大小  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
        配置监控统计拦截的filters  
        <property name="filters" value="stat" />
    </bean> -->
    
    <!-- ###############################################################数据库连接配置end############################################################### -->
    
    
    
    <!-- ###############################################################xml文件扫描配置start############################################################### -->
    <!-- comdb数据源xml扫描 -->
    <bean id="comdbSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
		<property name="mapperLocations">
			<list>
				<value>classpath*:/sqlMapper/comdb/*Mapper.xml</value>
			</list>
		</property>
    </bean>
    
    <!-- pridb数据源xml扫描 -->
    <!-- <bean id="pridbSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="pridbDataSource" />  
		<property name="mapperLocations">
			<list>
				<value>classpath*:/sqlMapper/pridb/*Mapper.xml</value>
			</list>
		</property>
    </bean> -->
    
    <!-- ###############################################################xml文件扫描配置end############################################################### -->
    
    
    
    <!-- ###############################################################mapper文件扫描配置start############################################################### -->
    <!-- comdb数据源mapper扫描 -->
    <bean id="mybatisConfigurer_comdb" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="comdbSqlSessionFactory"/>
        <property name="basePackage" value="com.xz.rpc.mapper.comdb" />
    </bean>
    
    <!-- pridb数据源mapper扫描 -->
    <!-- <bean id="mybatisConfigurer_pridb" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="pridbSqlSessionFactory"/>
        <property name="basePackage" value="com.xz.rpc.mapper.pridb" />
    </bean> -->
    
    <!-- ###############################################################mapper文件扫描配置end############################################################### -->
    
</beans>